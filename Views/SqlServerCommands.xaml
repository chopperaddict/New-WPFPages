<Window x:Class="WPFPages.Views.SqlServerCommands"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:WPFPages.Views"
         mc:Ignorable="d"
	  Loaded="Window_Loaded"
	  MouseRightButtonUp="Window_MouseRightButtonUp"
	  WindowStartupLocation="CenterScreen"
	  ResizeMode="CanResizeWithGrip"
       Title="Sql Server Commands" 
	  MinHeight="675" 
	  MinWidth="970"
	  Height="675" 	
	  Width="970">
	<!--MouseLeftButtonDown="ChangeFocus"-->
	<Window.Resources>


		<!--create the style for the RepeatButton and Thumb of the ScrollBar.-->
		<Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
			<!--We are drawing the WHOLE Control !!-->
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<!--//Handles scrollbar thumb button background color (Not  selected)-->
			<Setter Property="Background" Value="{StaticResource Green3}"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">

						<!--//This IS the one and only Scrollbar background -->
						<Border 
							Background="{StaticResource Blue4}" 
							Height="{TemplateBinding Height}" 
							Width="{TemplateBinding Width}" 
							CornerRadius="0"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--#region // Complete Style for Thumb button (only) -->
		<Style 
			x:Key="ScrollBarThumbVertical" 
			TargetType="{x:Type Thumb}">
			<!--We are drawing the WHOLE Control !!-->
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Margin" Value="3"/>

			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border x:Name="rectangle" 
								Height="{TemplateBinding Height}" 
							SnapsToDevicePixels="True"
							CornerRadius="0"
							Width="{TemplateBinding Width}" />

						<!--// controls the thumb button only-->
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="false">
								<!--// Shows a small circle in middle of thumb button when at rest-->
								<Setter Property="Background" TargetName="rectangle" Value="{StaticResource Red5}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<!--//color of Thumb button when moused over-->
								<Setter Property="Background" TargetName="rectangle" Value="{StaticResource Red8}"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="true">
								<!--// No apparent effect-->
								<Setter Property="Background" TargetName="rectangle" Value="{StaticResource Red4}"/>
							</Trigger>
							<Trigger Property="IsDragging" Value="true">
								<!--Thumb color when left button pressed-->
								<Setter Property="Background" TargetName="rectangle" Value="{StaticResource Red8}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion // Style for Thumb button-->

		<!--#region At rest scrollbar - partial control-->
		<!--x:Key="ScrollbarStyle1"-->
		<Style  TargetType="{x:Type ScrollBar}">
			<!--NO apparent changes-->
			<Setter Property="Background" Value="{StaticResource Red3}"/>
			<Setter Property="BorderBrush" Value="{StaticResource White0}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								<RowDefinition Height="0.00005*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
							<!--// This appears to be the thumb button itself-->
							<!--The  black border color remians same all the time-->
							<Border  x:Name="_Border"
								BorderBrush="{StaticResource Black3}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								Background="{StaticResource Cyan5}" 								
								CornerRadius="0"
								Grid.Row="1" />

							<!--Scrollbar has MOUSE  OVER-->
							<!--// Controls colors of Up button when scrollbar has mouse over it-->
							<RepeatButton x:Name="PART_LineUpButton" 
								Command="{x:Static ScrollBar.LineUpCommand}" 
								Background="{StaticResource Orange0}"
								Foreground="{StaticResource White0}"
								Height="25"
								IsEnabled="{TemplateBinding IsMouseOver}" 
								Margin="0,0,0,0">

								<!--// This is the Arrow UP icon-->
								<Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" 
									Fill="{StaticResource Black0}" 
									Margin="3,0,3,3" 
									Stretch="None"/>
							</RepeatButton>
							<Track x:Name="PART_Track"
								 IsDirectionReversed="true"
								 IsEnabled="{TemplateBinding IsMouseOver}" 
								 Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" 
											  Style="{StaticResource RepeatButtonTransparent}" 
											  HorizontalAlignment="Left" 
											  Width="17"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
								</Track.Thumb>
							</Track>
							<!--Scrollbar has MOUSE  OVER-->
							<!--// Controls colors of Down button when scrollbar has mouse over it-->
							<RepeatButton x:Name="PART_LineDownButton" 
								Background="{StaticResource Orange3}"
								Foreground="{StaticResource White0}"
								Command="{x:Static ScrollBar.LineDownCommand}" 
								IsEnabled="{TemplateBinding IsMouseOver}" 
								Grid.Row="2" 
								Height="25"
								Margin="0,0,0,0"
									  >
								<!--// This is the Arrow DOWN icon-->
								<Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" 
									TextElement.FontWeight="Bold"
									Fill="{StaticResource Black0}"
									Margin="3,0,3,3" 
									Stretch="None"/>
							</RepeatButton>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
		<SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
		<SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
		<SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
		<SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
		<SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FFFF0000"/>
		<!--// changed...-->
		<!--Main & dropdown Menu items background on mouseover-->
		<SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#FFD7D0A0"/>
		<SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF0018A0"/>
		<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
		<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
		<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
		<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
		<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
		<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
		<Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
		<Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
			<Setter Property="ClickMode" Value="Hover"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border x:Name="templateRoot" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" 
			 TargetType="{x:Type ScrollViewer}">
			<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid SnapsToDevicePixels="true">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Border Grid.Column="0" Grid.Row="1">
								<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
							</Border>
							<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
								<RepeatButton.Visibility>
									<MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0" FallbackValue="Visibility.Collapsed">
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
							</RepeatButton>
							<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
								<RepeatButton.Visibility>
									<MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100" FallbackValue="Visibility.Collapsed">
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
							</RepeatButton>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion At rest scrollbar - partial control-->

		<!--#region Menu Template-->
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" 
				     TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
				<Grid VerticalAlignment="Center">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
					<ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<!--// Main & dropdown items Background when Mouse Over-->
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Black0}"/>
					<Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsHighlighted" Value="True"/>
						<Condition Property="IsEnabled" Value="False"/>
					</MultiTrigger.Conditions>
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
				</MultiTrigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" 
				     TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
				<Grid VerticalAlignment="Center">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
					<ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=templateRoot}">
						<Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderThickness="1" BorderBrush="{StaticResource Menu.Static.Border}" Padding="2">
							<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="OpaqueRect"
											     Fill="{Binding Background, ElementName=SubMenuBorder}" 
											     Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
											     Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<Rectangle Fill="{StaticResource Menu.Static.Separator}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Popup>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
				</Trigger>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
					<Setter Property="Foreground" Value="{StaticResource Green5}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" 
				     TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" 
				  Background="{TemplateBinding Background}" 
				  BorderThickness="{TemplateBinding BorderThickness}" 
				  BorderBrush="{TemplateBinding BorderBrush}" 
				  Height="22" 
				  SnapsToDevicePixels="true">
				<Grid Margin="-1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="13"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="20"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Selected.Background}" BorderThickness="1" BorderBrush="{StaticResource MenuItem.Selected.Border}" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
						<Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/>
					</Border>
					<ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsHighlighted" Value="True"/>
						<Condition Property="IsEnabled" Value="False"/>
					</MultiTrigger.Conditions>
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
				</MultiTrigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" 
				     TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="22" SnapsToDevicePixels="true">
				<Grid Margin="-1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="13"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="20"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Highlight.Background}" BorderThickness="1" BorderBrush="{StaticResource MenuItem.Highlight.Border}" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
						<Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="9"/>
					</Border>
					<ContentPresenter ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
					<Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
					<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
						<Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderThickness="1" BorderBrush="{StaticResource Menu.Static.Border}" Padding="2">
							<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Popup>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
				</Trigger>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<SolidColorBrush x:Key="Menu.Static.Background1" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="Menu.Static.Border1" Color="#FFFF0000"/>
		<SolidColorBrush x:Key="Menu.Static.Foreground1" Color="#FF212121"/>

		<!--// Complete menu style for this file-->
		<Style x:Key="MenuItemStyle3" TargetType="{x:Type MenuItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Property="IsVisible"  Value="true"/>
						<!--<Condition Property="IsMouseover" Value="true"/>-->
					</MultiDataTrigger.Conditions>
					<MultiDataTrigger.Setters>
						<Setter Property="Background" Value="{StaticResource Orange2}"/>
						<Setter Property="Foreground" Value="{StaticResource White0}"/>
					</MultiDataTrigger.Setters>
				</MultiDataTrigger>
				<Trigger Property="Role" Value="TopLevelHeader">
					<Setter Property="Background" Value="Transparent"/>
					<!--// Border of menu top item-->
					<Setter Property="BorderBrush" Value="#FFFF0000"/>
					<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground1}"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
					<Setter Property="Padding" Value="6,0"/>
				</Trigger>
				<Trigger Property="Role" Value="TopLevelItem">
					<Setter Property="Background" Value="{StaticResource Menu.Static.Background1}"/>
					<Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border1}"/>
					<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground1}"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
					<Setter Property="Padding" Value="6,0"/>
				</Trigger>
				<Trigger Property="Role" Value="SubmenuHeader">
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--#endregion Menu Template-->


	</Window.Resources>
	<!--#region window setup-->
	<Window.Background>
		<LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
			<GradientStop Offset="0" Color="#FF1D4835" />
			<GradientStop Offset="0.3" Color="#FF6B8E95" />
			<GradientStop Offset="0.609" Color="#FF6B8E95" />
			<GradientStop Offset="1" Color="#FF14A7C1" />
			<GradientStop Offset="0" Color="#FF193A44" />
		</LinearGradientBrush>
	</Window.Background>

	<!--Button.Click="ShowGrid_Click-->
	<Grid   Margin="1,-2,-1,2" >
		<Grid.RowDefinitions>
			<RowDefinition Height="35" />
			<RowDefinition Height="70"/>
			<RowDefinition Height="70"/>
			<RowDefinition Height="50"/>
			<RowDefinition Height="45"/>
			<RowDefinition Height="45"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="50"/>
			<RowDefinition Height="50"/>
			<RowDefinition Height="50"/>
			<RowDefinition Height="10"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="140"/>
			<ColumnDefinition Width="10"/>
		</Grid.ColumnDefinitions>
		<!--#endregion Grid Setup-->

		<!--#region Row 1-->

		<TextBlock x:Name="textBlock" 
			Foreground="{StaticResource White0}"
			Grid.Column="1" 
			Grid.Row="1" 
			HorizontalAlignment="Left" 
			Margin="7,39,0,0" 
			Text="Db to Copy :" 
			TextWrapping="Wrap" 
			VerticalAlignment="Top"/>


		<TextBox x:Name="DbToCopyTb" 
			Background="{StaticResource Cyan5}"
			Foreground="{StaticResource Black0}"
			Grid.Row="1"
			Grid.Column="1"
			Height="25" 
			HorizontalAlignment="Right"   			   
			HorizontalContentAlignment="Center"
			   PreviewMouseLeftButtonUp="DbToCopy_PreviewMouseLeftButtonUp"
			VerticalContentAlignment="Center"
			Margin="0,0,10,0"
			Text="BankAccount" 
			TextWrapping="Wrap" 
			   Visibility="Collapsed"
			Width="120" 
			  />
		<WrapPanel
			Grid.Column="1" 
			Grid.ColumnSpan="2"
			Grid.Row="1" 
			Orientation="Horizontal"
			>

			<!--// Db Tables combo-->
			<ComboBox x:Name="DbToCopyCombo" 
					Background="{StaticResource Green2}"
					BorderThickness="0"
					Height="20"
					ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle1}" 			    
					IsEditable="True"   
					MaxDropDownHeight="142"  
					MouseDoubleClick="DbToCopyCombo_MouseDoubleClick"
					Margin="98,38,26,12" 
					OverridesDefaultStyle="False"	   			
					PreviewMouseLeftButtonDown="DbToCopyCombo_PreviewMouseLeftButtonDn"
					SelectedItem="0"	  			   
					SelectionChanged="DbToCopyCombo_SelectionChanged"
					Template="{StaticResource ComboBoxEditableTemplate}" Width="106"/>

			<TextBlock x:Name="textBlock_Copy" 
				Foreground="{StaticResource White0}"
				HorizontalAlignment="Left" 
				Margin="-15,39,0,0" 
				Text="To  :-" 
				TextWrapping="Wrap" 
				VerticalAlignment="Top" Height="15" 
				     />

			<TextBox x:Name="DbToBeCreated" 
				Background="{StaticResource ResourceKey=Cyan5}"
				Foreground="{StaticResource ResourceKey=Gray0}"
				HorizontalAlignment="Left"
				HorizontalContentAlignment="Center"
				LostFocus="DbToBeCreated_LostFocus"
				GotFocus="DbToBeCreated_GotFocus"
				Margin="10,35 0,10"
				PreviewMouseLeftButtonUp="DbToBeCreated_PreviewMouseLeftButtonUp"
				SelectionBrush="{StaticResource Blue6}"
				VerticalContentAlignment="Center"
				Text="Enter Table name..." 
				TextWrapping="Wrap" 
				Width="175" Height="27" 
				/>
		</WrapPanel>

		<TextBlock x:Name="DbCopiedResult" 
			Background="{StaticResource Yellow3}"
			Foreground="{StaticResource Black0}"
			Grid.Column="2" 
			Grid.ColumnSpan="3"
			Height="111"
			HorizontalAlignment="Right"
			Margin="0,3,1,0"
			SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"	    
			Padding="5"
			Text="Db Creation result:"
			TextAlignment="Center"
			TextWrapping="Wrap" 
			VerticalAlignment="Top" Grid.RowSpan="3" Width="500"
			/>

		<Button  x:Name="CopyDbBtn"
			Background="{StaticResource Green4}"
			Click="CopyDbBtn_Click"
			Content="Copy Db"
			Foreground="{StaticResource TextWhiteToBlackHorizontal4}"
			Grid.Column="1"
			Grid.Row="2"
			HorizontalAlignment="Left"
			Margin="0,15,0,15"
			Padding="3"
			PreviewMouseLeftButtonDown="ChangeFocus"
			Template="{StaticResource HorizontalGradientTemplateBlue}" Width="204"
			/>

		<!--// View DB Table-->
		<Button  x:Name="ViewDbBtn"
			  Background="{StaticResource Green4}"
			  Click="ViewDbBtn_Click"
			  Content="View Db"
			  Foreground="{StaticResource TextWhiteToBlackHorizontal4}"
			  Grid.Column="1"
			  Grid.Row="2"
			  HorizontalAlignment="Left"
			  Margin="222,15,0,15"
			  Padding="3"
			  PreviewMouseLeftButtonDown="ChangeFocus"
			  Template="{StaticResource HorizontalGradientTemplateBlue}" 
			   Width="204" Grid.ColumnSpan="2"/>
		<!--#endregion Row 1-->

		<!--#region Row 2-->
		<!--Row 2-->

		<!--#endregion Row 2-->

		<!--#region Row 3-->

		<TextBlock x:Name="a1field" 
			  Foreground="{StaticResource White0}"
			  Grid.Column="1" 
			  Grid.Row="2" 
			  Height="36" 
			  HorizontalAlignment="Left" 
			  Margin="7,69,0,0" 
			  Text="Enter SQL Query (NOT Stored Proc.)" 
			  TextWrapping="Wrap" 
			  VerticalAlignment="Top" 
			  Width="106" Grid.RowSpan="2"/>

		<TextBox x:Name="SqlCommandString" 
			Background="{StaticResource Cyan5}"
			FontSize="18"
			Foreground="{StaticResource Gray0}"
			Grid.Row="3"
			Grid.Column="1"
			Grid.ColumnSpan="3"   			   
			HorizontalContentAlignment="Center"
			KeyDown="SqlCommandString_KeyDown"
			LostFocus="SqlCommandString_LostFocus"
			Margin="118,1,59,17"
			PreviewMouseLeftButtonUp="SqlCommandString_PreviewMouseLeftButtonUp"
			SelectionBrush="{StaticResource Blue6}"	 			   
			Text="Enter arguments here ..." 
			TextWrapping="Wrap" 
			ToolTipService.HasDropShadow="true"
			ToolTipService.InitialShowDelay="1500"
			ToolTipService.BetweenShowDelay="5"
			ToolTipService.ShowDuration="2000"
			ToolTip="Enter a valid Sql command and press Enter, or click the 'Execute' button..."  
			VerticalContentAlignment="Center" TextChanged="SqlCommandString_TextChanged"/>

		<Button  x:Name="ExecSqlCommand"
			  Background="{StaticResource Green4}"
			  Click="ExecCommand_Click"		   
			  Content="Execute ..."
			   FontSize="18"
			  Foreground="{StaticResource TextWhiteToBlackHorizontal4}"
			  Grid.Column="4"
			  Grid.Row="2"
			  HorizontalAlignment="Center"
			  Padding="3"
			  Template="{StaticResource HorizontalGradientTemplateBlue}" 
			   VerticalAlignment="Top"
			  Width="140" Height="40" Margin="0,69,0,0" Grid.RowSpan="2"/>

		<!--#endregion Row 3-->

		<!--#region Row 4-->
		<TextBlock x:Name="textBlock_Copy1" 
			  Foreground="{StaticResource White0}"
			  Grid.Column="1" 
			  Grid.Row="4" 
			  HorizontalAlignment="Left" 
			  Margin="7,11,0,0" 
			  Text="Stored Procedure :" 
			  TextWrapping="Wrap" 
			  VerticalAlignment="Top"/>


		<TextBlock x:Name="textBlock_Copy2" 
			  Foreground="{StaticResource White0}"
			  Grid.Column="2" 
			  Grid.Row="4" 
			  HorizontalAlignment="Left" 
			  Margin="154,0,0,0" 
			  Text="Required arguments:-" 
			  TextWrapping="Wrap" 
			  VerticalAlignment="Center" 
			     Visibility="Collapsed"
			     Width="68"/>

		<TextBox x:Name="SpArgs" 
			  Background="{StaticResource ResourceKey=Cyan5}"
			  Foreground="{StaticResource ResourceKey=Black0}"
			  Grid.Row="4"
			  Grid.Column="3"
			  Height="25"
			  HorizontalAlignment="Left"
			  HorizontalContentAlignment="Center"
			  Margin="0,11,0,11"
			  PreviewMouseLeftButtonUp="SPArgs_PreviewMouseLeftButtonUp"
			  VerticalContentAlignment="Center"
			  Text="" 
			  TextWrapping="Wrap" 
			   Visibility="Collapsed"
			  Width="120" />

		<!--// Execute a manual SQL command of various forms-->
		<Button  x:Name="ExecuteSp"
			Background="{StaticResource Green4}"
			Click="ExecuteSQLCommand_Click"
			Content="Execute Procedure"
			IsEnabled="true"
			FontSize="14"
			Foreground="{StaticResource TextWhiteToBlackHorizontal4}"
			Grid.Column="4"
			Grid.Row="4"
			HorizontalAlignment="Right"
			Margin="0,0,0,0"
			Padding="3"
			Template="{StaticResource HorizontalGradientTemplateBlue}" 
			VerticalAlignment="Top"
			Width="140" Height="40" />
		<!--#endregion Row 4-->

		<!--#region Row 5-->
		<TextBlock x:Name="GridCount"
			Background="{StaticResource Blue0}"
			FontSize="20"
			Foreground="{StaticResource White0}"
			Grid.Column="4" 
			Grid.Row="6"
			Height="31"
			HorizontalAlignment="Center"
			Margin="0,0,0,40"
			Padding="0"
			TextAlignment="Center"
			Text="1234"
			VerticalAlignment="Bottom" 
			 Width="140" 
			     />

		<!--#endregion Row 5-->

		<!--#region Row 6-->
		<TextBlock x:Name="NameLabel"
			  Background="Transparent"
			  FontSize="14"
			  Foreground="{StaticResource ResourceKey=Black0}"
			  Grid.Column="4"
			  Grid.Row="6"
			  Height="21"
			  HorizontalAlignment="Right"
			  Margin="0,0,35,19"
			  Padding="2"
			  Text="Db Shown"
			  TextAlignment="Center"
			  VerticalAlignment="Bottom" 			     />
		<!--#endregion Row 6-->

		<!--#region Row 7-->
		<TextBlock x:Name="BankNameLabel"
			  Background="{StaticResource ResourceKey=Cyan5}"
			  FontSize="14"
			  Foreground="{StaticResource ResourceKey=Black0}"
			  Grid.Column="4"
			  Grid.Row="6"
			  Grid.RowSpan="2"
			  Height="29"
			  HorizontalAlignment="Center"
			  Margin="0,0,0,37"
			  Padding="3"
			  TextAlignment="Center"
			  VerticalAlignment="Bottom" 
			  Width="140" 
			     />
		<!--#endregion Row 7-->

		<!--#region Row 8-->
		<Button  x:Name="ClearGrid"
			  Background="{StaticResource Green5}"
			  Click="ClearGrid_Click"
			  Content="Clear Grid"
			  Foreground="{StaticResource TextWhiteToBlackHorizontal4}"
			  Grid.Column="4"
			  Grid.Row="7"
			  Grid.RowSpan="2"
			  Height="40" 
			  HorizontalAlignment="Center"
			  Margin="0,19,0,0"
			  Padding="3"
			  Template="{StaticResource HorizontalGradientTemplateBlue}" 
			   VerticalAlignment="Top"
			   Width="140" 
					/>
		<!--#endregion Row 8-->

		<!--#region Row 9-->
		<TextBox x:Name="DbToCopy_Copy" 
			  Background="{StaticResource Cyan5}"
			  Foreground="{StaticResource Black0}"
			  Grid.Row="9"
			  Grid.Column="4"
			  Height="25" 
			  HorizontalAlignment="Left"   			   
			  HorizontalContentAlignment="Center"
			  PreviewMouseLeftButtonUp="DbToCopy_PreviewMouseLeftButtonUp"
			  VerticalContentAlignment="Center"
			  Margin="3,5,0,5"
			  Text="spLoadFullDetails" 
			  TextWrapping="Wrap" 
			   Visibility="Collapsed"
			  Width="92" />

		<Button  x:Name="ShowProcCode"
			Background="{StaticResource Black0}"
			Click="ListSPs_Click"
			Content="List All S.P's in Grid"
			FontSize="12"
			Foreground="{StaticResource Yellow1}"
			Grid.Row="5"
			Grid.Column="1"
			Grid.ColumnSpan="2"
			HorizontalAlignment="Left"
			Margin="157,2,0,3"
			Padding="3"
			   PreviewMouseLeftButtonDown="ChangeFocus"
			   Template="{StaticResource HorizontalGradientTemplateBlue}"
			Visibility="Visible" 
			Width="138" />

		<Button  x:Name="ShowSchemas"
			Background="{StaticResource Red5}"
			Click="Schemas_Click"
			Content="View All S.P. scripts"
			FontSize="14"
			Foreground="{StaticResource TextWhiteToBlackHorizontal4}" 
			Grid.Column="4"
			Grid.Row="5"
			Height="40" 
			HorizontalAlignment="Right"
			Margin="0,0,0,0"
			MaxWidth="138"
			Padding="3"
			Template="{StaticResource HorizontalGradientTemplateBlue}" 
			VerticalAlignment="Top"
			Visibility="Visible" 
			Width="140" 
			   />

		<Button  x:Name="SPArguments"
			Background="{StaticResource Red5}"
			Click="SPArguments_Click"
			Content="Check SP Arguments"
			Foreground="{StaticResource Yellow1}" 
			Grid.Column="1"
			Grid.Row="5"
			HorizontalAlignment="Left"
			Margin="10,2,0,3"
			Padding="3"
			PreviewMouseLeftButtonDown="ChangeFocus"
			Template="{StaticResource HorizontalGradientTemplateBlue}"
			Visibility="Visible" 
			Width="138" />


		<Button  x:Name="ViewSPArgs"
			Click="ViewSPArgs_Click"
			Content="PreView  S.P Arguments "
			Foreground="{StaticResource Yellow1}" 
			Grid.Column="1"
			Grid.ColumnSpan="3"
			Grid.Row="5"
			HorizontalAlignment="Left"
			Margin="446,2,0,0"
			PreviewMouseLeftButtonDown="ChangeFocus"
			MaxWidth="235"
			Padding="3"
			Template="{StaticResource HorizontalGradientTemplateBlue}"
			TextOptions.TextFormattingMode="Ideal"
			Visibility="Visible" 
			Width="236" 
			   />

		<Button  x:Name="zzzyhemas"
			Click="TestGenericLinq"
			Content="Linq Test"
			FontSize="14"
			Foreground="{StaticResource TextWhiteToBlackHorizontal4}"
			Grid.Column="4" 
			Grid.Row="6"
			Height="40" 
			HorizontalAlignment="Center"
			Margin="0,0,0,77" 
			Padding="3"
			Template="{StaticResource HorizontalGradientTemplateBlue}" 
			Visibility="Visible" 
			VerticalAlignment="Bottom" 
			Width="140" 
			/>

		<Button  x:Name="ShowGrid"
			  Background="{StaticResource Yellow1}"
			  Click="ShowGrid_Click"
			  Content="Show Grid"
			  Foreground="{StaticResource TextWhiteToBlackHorizontal4}"
			  Grid.Row="8"
			  Grid.RowSpan="2"
			  Grid.Column="4"
			  Height="40" 
			  HorizontalAlignment="Center"
			  Margin="0,15,0,0"
			  Padding="3"
			  Template="{StaticResource HorizontalGradientTemplateYellow}" 
			  VerticalAlignment="Top"
			  Width="140" 
			   />
		<!--#endregion Row 9-->

		<!--#region Datagrid-->
		<!--<ScrollViewer  x:Name="gridscroller" 
			Grid.Column="1"
			Grid.ColumnSpan="3"
			Grid.Row="6"
			Grid.RowSpan="4"
			ScrollViewer.HorizontalScrollBarVisibility="Auto"  Width="auto">-->
		<DataGrid x:Name="DisplayGrid"
					AlternatingRowBackground="{StaticResource Cyan8}"
					AutoGenerateColumns="True"
					Background="{StaticResource Blue6}"
					BorderBrush="#9AFF0000"		 	
					CanUserAddRows="False"
					CanUserDeleteRows="False"
					CanUserResizeColumns="true"
					CanUserSortColumns="True"
					Grid.Column="1"
					Grid.ColumnSpan="3"
					Grid.Row="6"
					Grid.RowSpan="4"
					HorizontalScrollBarVisibility="Visible"
					Margin="3,7,24,22"
					MaxColumnWidth="500"
					MinColumnWidth="10"
					MinWidth="250"
					MouseDoubleClick="DisplayGrid_MouseDblClick"
					Padding="3"
					Panel.ZIndex="1"
			    		ScrollViewer.HorizontalScrollBarVisibility="Visible"
					ScrollViewer.VerticalScrollBarVisibility="Auto"
					ToolTipService.HasDropShadow="true"
					ToolTipService.InitialShowDelay="1500"
					ToolTipService.BetweenShowDelay="5"
					ToolTipService.ShowDuration="2000"
					ToolTip="Double click to view currently selected item in an editable Text box"	
					VerticalContentAlignment="Top" 
					Visibility="Visible" 
					Width="Auto"
					/>
		<!--<DataGrid x:Name="spViewerGrid"
					AlternatingRowBackground="{StaticResource Gray3}"
					AutoGenerateColumns="false"
					Background="{StaticResource Red8}"
					BorderBrush="#9AFF0000"		 	
					CanUserAddRows="False"
					CanUserDeleteRows="False"
					CanUserResizeColumns="true"
					CanUserSortColumns="True"
					Foreground="{StaticResource Black0}"
					Grid.Column="1"
					Grid.ColumnSpan="3"
					Grid.Row="6"
					Grid.RowSpan="4"
					HorizontalScrollBarVisibility="Visible"
					MaxColumnWidth="500"
					MinColumnWidth="10"
					MinWidth="250"
					MouseDoubleClick="SpViewerGrid_MouseDblClick"
					Padding="3"
					Panel.ZIndex="9"
					RowHeight="{x:Static sys:Double.NaN}"
			    		ScrollViewer.HorizontalScrollBarVisibility="Visible"
					ScrollViewer.VerticalScrollBarVisibility="Auto"
					ToolTipService.HasDropShadow="true"
					ToolTipService.InitialShowDelay="1500"
					ToolTipService.BetweenShowDelay="5"
					ToolTipService.ShowDuration="2000"
					ToolTip="Double click to close this 'Specal' Viewer"	
					VerticalContentAlignment="Top" 
					Visibility="Collapsed" 
					 Margin="4,9,26,3">-->

		<!--<DataGridTemplateColumn Header="Stored Procedure" 
							CanUserReorder="False"
							Width="*">
				<DataGridTemplateColumn.CellTemplate>
					<DataTemplate>
						<TextBlock x:Name="tbDescription" Margin="5"  
							Height="Auto" 
							Text="{Binding sDescription}"
							TextWrapping="Wrap"
							Width="Auto" 
							VerticalAlignment="Top"/>
					</DataTemplate>
				</DataGridTemplateColumn.CellTemplate>
				<DataGridTemplateColumn.CellEditingTemplate>
					<DataTemplate>
						<TextBox x:Name="txtDescription" 
							GotFocus="txtDescription_GotFocus" 
							Text="{Binding sDescription, Mode=TwoWay}" 
							TextWrapping="Wrap"
							VerticalAlignment="Top" />
					</DataTemplate>
				</DataGridTemplateColumn.CellEditingTemplate>
			</DataGridTemplateColumn>

		</DataGrid>-->

		<!--// Display grid record content-->
		<TextBox x:Name="GridData_Display" 
			Background="{StaticResource Cyan5}"
			CommandManager.CanExecute="GridData_Display_CanExecute"
			Foreground="{StaticResource Black0}"
			Grid.Column="1" 
			Grid.Row="6"   			   
			HorizontalContentAlignment="Left"
			HorizontalScrollBarVisibility="Auto"
			PreviewKeyDown="GridData_Display_PreviewKeyDown"
			Margin="3,10,24,0"
			Padding="8"
			Panel.ZIndex="3"			   
			MouseDoubleClick="GridData_Display_MouseDoubleClick"
			TextAlignment="Left"
			Text="spLoadFullDetails" 
			TextWrapping="NoWrap" 
			ToolTipService.HasDropShadow="true"
			ToolTipService.InitialShowDelay="1500"
			ToolTipService.BetweenShowDelay="5"
			ToolTipService.ShowDuration="2000"
			VerticalContentAlignment="Center"
			VerticalScrollBarVisibility="Auto"
			Visibility="Visible" 
			Grid.ColumnSpan="3" 
			Grid.RowSpan="4">

			<TextBox.ToolTip >
				<TextBlock 
					Background="Transparent" 
					FontSize="16" 
					Foreground="{StaticResource Red5}" 
					Text="Hit ESCAPE or Double click to return to the Data Grid view..."
					TextOptions.TextRenderingMode="ClearType"
					/>
			</TextBox.ToolTip>
		</TextBox>



		<!--#region pointer Arrows-->
		<Path x:Name="arrow2" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
					Fill="{StaticResource White0}"   
					Grid.Row="3"
					Grid.Column="3"
					HorizontalAlignment="Right"
					Margin="0,15,21,0" 
					RenderTransformOrigin="0.776,-0.13" 
					Stretch="Fill" 
					Width="12" Height="16" VerticalAlignment="Top" >
			<Path.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform Angle="89.427"/>
					<TranslateTransform X="3.168" Y="6.738"/>
				</TransformGroup>
			</Path.RenderTransform>
		</Path>
		<Path x:Name="arrow3" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
			Fill="{StaticResource Red5}" 		
			Grid.Row="3"
			Grid.Column="3"
			HorizontalAlignment="Right"
			Margin="0,19,33,15" 
			Stretch="Fill" 
			Width="12"
			RenderTransformOrigin="0.814,-0.527" >
			<Path.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform Angle="89.427"/>
					<TranslateTransform X="6.099" Y="9.696"/>
				</TransformGroup>
			</Path.RenderTransform>
		</Path>
		<Path x:Name="arrow4" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
			Fill="{StaticResource Red5}" 
			Grid.Row="3"
			Grid.Column="3"
			HorizontalAlignment="Right"
			Margin="0,7,0,27" 
			Stretch="Fill" 
			Width="12" 
			RenderTransformOrigin="-0.844,-0.162" >
			<Path.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform Angle="89.427"/>
					<TranslateTransform X="14.393" Y="-3.96"/>
				</TransformGroup>
			</Path.RenderTransform>
		</Path>
		<!--#endregion pointer Arrows-->

		<!--#endregion Datagrid-->

		<!--#region Display panel-->

		<!--// Textbox showing SP Args PRIOR to processing it-->
		<Border  x:Name="SpArgsList" 
			Grid.Row="6" 
			Grid.Column="2"
			Grid.ColumnSpan="2"
			Grid.RowSpan="2"	
			Background="{StaticResource Blue0}"
			MinHeight="235"
			Height="235"
			IsHitTestVisible="True"
			Margin="21,7,25,2"
			PreviewKeyDown="SpArgsList_KeyDown"
			Panel.ZIndex="5"
			PreviewMouseLeftButtonDown="SpArgsList_PreviewMouseLeftButtonDown"
			PreviewMouseLeftButtonUp="SpArgsList_PreviewMouseLeftButtonUp"
			MouseMove="SpArgsList_MouseMove"
			Visibility="Visible">
			<StackPanel Background="{StaticResource Blue0}" Margin="0,0,25,0" >
				<Label x:Name="CloseViewer"
					Background="{StaticResource ResourceKey=Red5}"
					Content="X"
					FontSize="20"
					Foreground="White"
					Height="27" 
					HorizontalAlignment="Right"
					Margin="0 5 0 0"
					MouseEnter="CloseViewer_MouseEnter"
					MouseLeave="CloseViewer_MouseLeave"
					MouseMove="CloseViewer_MouseMove"
					PreviewMouseDown="CloseViewer_PreviewMouseDown"
					Padding="7  0  0  0"
					PreviewMouseLeftButtonDown="CloseViewer_PreviewMouseDown"		
					Width="27" 
					/>
				<TextBlock
					Text="Stored Procedure Arguments viewer" 
					Height="18"
					Foreground="White"
					HorizontalAlignment="left"
					IsHitTestVisible="True"
					Margin="10 -28 0 0"
					PreviewKeyDown="TextBlock_PreviewKeyDown"
					Visibility="{Binding Visibility, ElementName=SpArgsList}" Width="324"/>

				<TextBox  x:Name="SpArgsListtbox" 
					Background="{StaticResource Blue4}"
					Foreground="{StaticResource White0}"
					Height="184"
					HorizontalAlignment="Stretch"
					IsReadOnly="False"
					IsHitTestVisible="True"
					Margin="7,7,7,0"
					MinHeight="180"
					MinWidth="385"
					MouseDoubleClick="SpArgsListtbox_MouseDoubleClick"
					Padding="5"
					Panel.ZIndex="6"
					PreviewKeyDown="SpArgsList_PreviewKeyDown"
					ScrollViewer.CanContentScroll="True"
					SelectionBrush="{StaticResource Red5}"
					SelectionTextBrush="{StaticResource White0}"
					SelectionOpacity="0.5"
					TextWrapping="NoWrap"
					UseLayoutRounding="True"
					VerticalAlignment="Stretch"
					VerticalScrollBarVisibility="Auto"
					Visibility="{Binding Visibility, ElementName=SpArgsList}" 					
					    />
			</StackPanel>
		</Border>
		<!--#endregion Display panel-->

		<!--// 'Last Command' label-->
		<TextBlock x:Name="textBlock_3" 
			  Foreground="{StaticResource White0}"
			  Grid.Column="1" 
			  Grid.Row="1" 
			  HorizontalAlignment="Left" 
			  Margin="6,9,0,0" 
			  Text="Last Command :" 
			  TextWrapping="Wrap" 
			  VerticalAlignment="Top"/>

		<!--// Display of last command executed (red)-->
		<TextBox x:Name="CurrentCommandLabel" 
			Background="{StaticResource Red5}"
			Foreground="{StaticResource White0}"
			Grid.Row="1"
			Grid.Column="1"
			Grid.ColumnSpan="2"
			Height="25" 
			HorizontalAlignment="Left"   			   
			HorizontalContentAlignment="Center"
			KeyDown="SqlCommandString_KeyDown"
			PreviewMouseLeftButtonUp="SqlCommandString_PreviewMouseLeftButtonUp"
			VerticalContentAlignment="Center"
			Margin="100,3,0,42"
			Text="" 
			TextWrapping="Wrap" 
			ToolTipService.HasDropShadow="true"
			ToolTipService.InitialShowDelay="1500"
			ToolTipService.BetweenShowDelay="5"
			ToolTipService.ShowDuration="2000"
			ToolTip="Enter a valid Sql command and press Enter, or click the 'Execute' button..."
			Width="326" />


		<!--#region Menu-->
		<!--Template="{StaticResource MenuItemCtrlTemplate1}"-->

		<!--MenuAttachedProperties control all dropdown items-->
		<Menu x:Name="Mainmenu" 
			Grid.Column="1" 
			Grid.ColumnSpan="2"
			Width="Auto" 			
			HorizontalAlignment="Left"
			HorizontalContentAlignment="Left"
			local:MenuAttachedProperties.MenuItemForeground="{StaticResource Black0}"
			local:MenuAttachedProperties.MenuItemBackground="{StaticResource Red2}"
			local:MenuAttachedProperties.MenuItemSelectedBackground="{StaticResource Blue5}"
			local:MenuAttachedProperties.MenuItemSelectedForeground="{StaticResource White0}"
			local:MenuAttachedProperties.MenuItemBorderColor="{StaticResource Black0}"
			local:MenuAttachedProperties.MenuItemHeight="25"
			local:MenuAttachedProperties.MenuFontSize="14"			
			local:MenuAttachedProperties.MenuItemBorderThickness="2"
			local:MenuAttachedProperties.MenuItemMargin="2"
			>
			<!--NOT USED - local:MenuAttachedProperties.MenuBackground="{StaticResource Green5}"-->

			<!--// Foreground controls MAIN menu items foreground color-->
			<MenuItem x:Name="menu_options" Header="Options" 
				Background="#D7004573"
				Foreground="{StaticResource White0}"
				Click="Option1_Click"
				FontSize="16" 
				IsHitTestVisible="true"
				Width="Auto">
				<!--Style="{DynamicResource MenuItemStyle1}"-->

				<!--MenuItemStyle1 is for use with top level menu items ONLY-->

				<!--Style="{DynamicResource MenuItemStyle1}"   ThemeMenuItem-->
				<!--// Background controls background of all SUB items-->
				<!--// Foreground controls text color of ALL items irrespective of being selected-->
				<MenuItem Header="Refresh Both Dropdowns" 
					    Background="{StaticResource Green1}"
					    Foreground="White"
					    Click="RefreshLists_Click"
					FontSize="16" 
					Name="Option2"
					Template="{StaticResource MenuItemCtrlTemplate1}"
					Width="Auto"/>
				<!--Style="{StaticResource ThemeMenuItem}"-->
				<MenuItem Header="Short Message Box" 
				    Background="{StaticResource Orange1}"
					    Foreground="White"
					Click="Shortmsgbox_Click"
					FontSize="16" 
					Name="mboxshort"
					Template="{StaticResource MenuItemCtrlTemplate1}"
					Width="Auto"/>

				<MenuItem Header="Full Message Box" 
				    Background="{StaticResource Orange1}"
					    Foreground="White"
					Click="Fullmsgbox_Click"
					FontSize="16" 
					Name="mboxfull"
					Template="{StaticResource MenuItemCtrlTemplate1}"
					Width="Auto"/>
				<MenuItem Header="View current grid content" 
				    Background="{StaticResource Orange1}"
					    Foreground="White"
					Click="ViewGridContent_Click"
					FontSize="16" 
					Name="Option3"
					Template="{StaticResource MenuItemCtrlTemplate1}"
					Width="Auto"/>
				<!--Style="{StaticResource ThemeMenuItem}"-->
				<MenuItem Header="something else...." 
					Click="RefreshLists_Click"
				    Background="{StaticResource Red5}"
					    Foreground="White"
					FontSize="16" 
					Name="Option4"
					Template="{StaticResource MenuItemCtrlTemplate1}"
					Width="Auto"/>
				<!--Style="{StaticResource ThemeMenuItem}"-->
			</MenuItem>
			<MenuItem Header="Info !" 
				Click="info_Click"
				FontSize="16" 
				Background="#D7004573"
				Foreground="{StaticResource White1}"
				HorizontalContentAlignment="Center"
				Name="Option7"
				Style="{DynamicResource MenuItemStyle1}"
				Width="75"/>
			<MenuItem Header="Help ?" 
				Click="Help_Click"
				FontSize="16" 
				Background="#D7004573"
				Foreground="{StaticResource White2}"
				HorizontalContentAlignment="Center"
				Name="Option6"
				Style="{DynamicResource MenuItemStyle1}" 
				Width="100"/>

		</Menu>
		<!--#endregion Menu-->

		<WrapPanel
			Grid.Row="4"
			Grid.Column="1"
			Grid.ColumnSpan="3"
			HorizontalAlignment="Left"
			Orientation="Horizontal" Width="785"
			>
			<!--// Stored Procedures-->
			<ComboBox Style="{DynamicResource ComboBoxStyle1}" x:Name="SPCombo" 
			Background="{StaticResource Blue0}"			    
			Foreground="{StaticResource Red5}"
			IsEditable="True"  
			HorizontalAlignment="Left"
			ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle1}" 	
			
			MaxDropDownHeight="142"  
			MouseDoubleClick="SPCombo_MouseDoubleClick" 
			PreviewMouseLeftButtonDown="SPCombo_PreviewMouseLeftButtonDn"
			ScrollViewer.HorizontalScrollBarVisibility="Auto"
			SelectionChanged="SPCombo_SelectionChanged" 
			SelectedIndex="0" 
			Width="285" />

			<TextBlock Width="20"/>

			<TextBox x:Name="SPArgs" 
				Background="{StaticResource ResourceKey=Cyan5}"
				FontSize="18"
				Foreground="{StaticResource ResourceKey=Gray0}"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Center"
				KeyDown="SPArgs_KeyDown"
				LostFocus="SPArgs_LostFocus"
				   Padding="1"
				PreviewMouseLeftButtonUp="DbToBeCreated_PreviewMouseLeftButtonUp"
				SelectionBrush="{StaticResource Red5}"
				Text="Enter arguments here ..." 
				TextWrapping="Wrap" 	
				VerticalContentAlignment="Center" 
				Width="465"
						/>
		</WrapPanel>
		<Button  x:Name="ViewFullProcCode"
			  Background="{StaticResource Black0}"
			  Click="ViewFullSP_Click"
			  Content="View full SP Script"
			  FontSize="12"
			  Foreground="{StaticResource Yellow1}"
			  Grid.Row="5"
			  Grid.Column="1"
			   Grid.ColumnSpan="3"
			  HorizontalAlignment="Left"
			  Margin="301,2,0,3"
			  MaxWidth="134"
			  Padding="3"
			   PreviewMouseLeftButtonDown="ChangeFocus"
			   Template="{StaticResource HorizontalGradientTemplateBlue}"
			  Visibility="Visible" 
			  Width="138" />
		<Button  x:Name="Close"
			  Background="{StaticResource Red1}"
			  Click="Close_Click"
			  Content="Close"
			  Foreground="{StaticResource Black0}"
			  Grid.Row="9"
			  Grid.Column="3"
			  HorizontalAlignment="right"
			  Margin="0,0,0,0"
			  Padding="3"
			  Template="{StaticResource HorizontalGradientTemplateRed}" 
			   VerticalAlignment="Bottom"
			  Width="140" Grid.ColumnSpan="2" Height="40"
							/>
		<Button  x:Name="ExecSqlCommand_Copy"
			  Background="{StaticResource Green4}"
			   Click="ExecSqlCommand_Copy_Click"
			  Content="Refresh Combos "
			  FontSize="14"
			  Foreground="{StaticResource Blue0}"
			  Grid.Column="4"
			  Grid.Row="2"
			  HorizontalAlignment="Center"
			   Opacity="1"
			  Padding="3"
			  Template="{StaticResource HorizontalGradientTemplateBlue}" 
			   VerticalAlignment="Top"
			  Width="140" Height="40" 
			   Margin="0,19,0,0"/>
		<Button  x:Name="testing1"
			  Click="Testing1_Click"
			  Content="Spare"
			  FontSize="14"
			  Foreground="{StaticResource ResourceKey=TextWhiteToBlackHorizontal4}"
			  Grid.Column="4"
			  Grid.Row="6"
			  Height="40" 
			  HorizontalAlignment="Center"
			  Margin="0,0,0,123" 
			  Opacity="0.4"
			  Padding="3"
			  Template="{StaticResource HorizontalGradientTemplateBlue}" 
			  Visibility="Visible" 
			  VerticalAlignment="Bottom" 
			  Width="140" 
					/>
	
	</Grid>
</Window>
