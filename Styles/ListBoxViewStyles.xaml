<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	

	<!--//Default (GENERIC DATA) style for ListViewItems-->
	<Style x:Key="lvItemStyle1" TargetType="{x:Type ListViewItem}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Padding" Value="4,1"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>

				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="Bd" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            Padding="{TemplateBinding Padding}" 
                                            SnapsToDevicePixels="true">
						<Border.Background>
							<SolidColorBrush x:Name="borderbckgrnd" Color="{TemplateBinding Background}" />
						</Border.Background>

						<ContentPresenter x:Name="contentpresenter"                                                            
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false"/>
								<Condition Property="IsSelected" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Blue4}"/>
							<Setter Property="Foreground" Value="{StaticResource White3}"/>
							<Setter Property="FontWeight" Value="DemiBold"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Red5}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Red5}"/>
							<Setter Property="Foreground" Value="{StaticResource White0}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Red5}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Red0}"/>
							<Setter Property="Foreground" Value="{StaticResource White0}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource White0}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>