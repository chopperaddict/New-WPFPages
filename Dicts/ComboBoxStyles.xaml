<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
	<!--#region Combo box template(s) :	  use with :
		ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle1}"
		Template="{StaticResource ComboBoxEditableTemplate}"-->


	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" 
							     StrokeDashArray="1 2" 
							     SnapsToDevicePixels="true" 
							     StrokeThickness="1"
							     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!--// Having an effect
	//=============-->
	<!--// Background color of (unselected)  item that has mouse over it-->
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#CCFF0500"/>
	<!--// Background color of all items in dropdown that do NOT have mouse over it-->
	<SolidColorBrush x:Key="ComboBoxItemForegroundNoFocus" Color="#CCFfFFFF"/>

	<SolidColorBrush x:Key="ComboBoxItemForegroundUnselected" Color="#CCFEFF00"/>
	<!--<SolidColorBrush x:Key="ComboBoxItemForegroundSelected" Color="#CCFEFFFF"/>-->
	<!--// used in many places !!-->
	<SolidColorBrush x:Key="ComboBoxItemForegroundDefault" Color="#CCFEFF00"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#CCFEFFFF"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#CC9D0075"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FFA44211"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#6DFF00F1"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#6DFF00F1"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#FFA436DD"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
	<SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF947C2F"/>
	<!--<SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA"/>-->
	<!--<SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF0000FF"/>-->
	<!--<SolidColorBrush x:Key="ComboBoxItem.ItemsviewForeground" Color="#FF111C00"/>-->

	<Style x:Key="ComboBoxItemContainerStyle1" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Padding" Value="4,1"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<!--These 2 control colours of ALL items in the dropdown area only (not the edit box)-->
		<Setter Property="Background" Value="{StaticResource Blue1}"/>
		<Setter Property="Foreground" Value="{StaticResource White0}"/>

		<Setter Property="BorderBrush" Value="{StaticResource Red1}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">

					<Border x:Name="Bd" 
							  Background="{TemplateBinding Background}" 
							  BorderThickness="{TemplateBinding BorderThickness}" 
							  BorderBrush="{TemplateBinding BorderBrush}" 
							  Padding="{TemplateBinding Padding}" 
							  SnapsToDevicePixels="true">
						<!--<WrapPanel Orientation="Horizontal">
							<TextBlock x:Name="cookieKey" Text="{Binding cookieName, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
									     Width="20" />
							<TextBlock x:Name="cookieValue" Text="{Binding cookieValue,  RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
								     Width="Auto"/>
						</WrapPanel>-->
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<!--<Border x:Name="Bd" 
							  Background="{TemplateBinding Background}" 
							  BorderThickness="{TemplateBinding BorderThickness}" 
							  BorderBrush="{TemplateBinding BorderBrush}" 
							  Padding="{TemplateBinding Padding}" 
							  SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>-->
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<!--These 2 Handle the background / Foreground colour of the((unselected) dropdown entry when mouse is over it-->
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsKeyboardFocused" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="TextElement.Foreground"  Value="{StaticResource ComboBoxItemForegroundUnselected}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
						</MultiTrigger>
						<!--colours of SELECTED items in dropdown as mouse moves over it-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsKeyboardFocused" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="TextElement.Foreground"  Value="{StaticResource Red5}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="#BDE0B35C"/>
							<Setter Property="Background" TargetName="Bd" Value="#BDE0B35C"/>
							<Setter Property="TextElement.FontWeight" Value="Bold"/>
						</MultiTrigger>
						<MultiTrigger>
							<!--colors of the currently selected item in the dropdown with  mouse NOT over it-->
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="IsMouseOver" Value="False"/>
								<Condition Property="IsKeyboardFocused" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="TextElement.Foreground"  Value="{StaticResource ComboBoxItemForegroundDefault}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItemForegroundDefault}"/>
						</MultiTrigger>
						<MultiTrigger>
							<!--Does nothing !!-->
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="IsMouseOver" Value="False"/>
								<Condition Property="IsKeyboardFocused" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="TextElement.Foreground"  Value="{StaticResource Green5}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
						</MultiTrigger>
						<MultiTrigger>
							<!--// Does nothing ??-->
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsMouseOver" Value="False"/>
								<Condition Property="IsKeyboardFocused" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground"  Value="{StaticResource ComboBoxItemForegroundDefault}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Black0}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
						</MultiTrigger>
						<!--// Togglebutton background/Border -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsKeyboardFocused" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="TextElement.Foreground"  Value="{StaticResource ComboBoxItemForegroundDefault}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Green7}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Green0}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="FocusVisual1">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
							     <!--StrokeDashArray="1 2"--> 
					<Rectangle Margin="2" 
							     SnapsToDevicePixels="true" 
							     StrokeThickness="1" 
							     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--// CONTROLS COLOR OF ENTIRE COMBO BORDER-->
	<SolidColorBrush x:Key="TextBox.Static.Background" Color="#BBFFFFFF"/>
	<!--<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FF0000FF"/>-->

	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="AllowDrop" Value="true"/>
		<!--//  ******* This control Text color of EditBox ***********-->
		<Setter Property="Foreground" Value="{StaticResource White0}"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<!--// This colours the editbox background, but not foreground-->
					<ScrollViewer x:Name="PART_ContentHost" 
								  Background="{StaticResource Blue1}"
								  Foreground="Black"
								  Focusable="True" 
								  HorizontalScrollBarVisibility="Hidden" 
								  VerticalScrollBarVisibility="Hidden"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--// colors for togglebutton-->
	<LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
		<!--// No effect-->
		<GradientStop Color="#FF000000" Offset="0.0"/>
		<GradientStop Color="#FFE5E5E5" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FF000000"/>
	<!--// Normal Background colors for togglebutton-->
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FF000000"/>

	<!--//===================================================================================-->
	<!--KNOWN CONTROL COLORS-->
	<!--This isDefinitely the normal Background of the combo button-->
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="#FFDCFF00"/>
	<!--// Color of icon on togglebutton-->
	<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF000000"/>

	<!--// BACKGROUND  COLOR OF TOGGLEBUTTON ON MOUSEOVER-->
	<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFFF0055" Offset="0.0"/>
		<GradientStop Color="#FFDCECFC" Offset="1.0"/>
	</LinearGradientBrush>
	<!--//===================================================================================-->
	
	<!--Border color around togglebutton-->
	<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FFFFFF00"/>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF000000"/>

	<!--// No effect-->
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="#FFFFFFFF"/>
	<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FF00ff00" Offset="0.0"/>
		<GradientStop Color="#FFDCECFC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FFFF0000"/>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF00ff00"/>
	<LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
		<!--// NO EFFECT-->
		<GradientStop Color="#FF0000FF" Offset="0.0"/>
		<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
	<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
	<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFDAEBFC" Offset="0.0"/>
		<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFFFF0F0"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>

	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="templateRoot" 
							  Background="{StaticResource ComboBox.Static.Background}" 
							  BorderThickness="{TemplateBinding BorderThickness}" 
							  BorderBrush="{StaticResource ComboBox.Static.Border}" 
							  SnapsToDevicePixels="true">
						<!--// ToggleButton-->
						<Border x:Name="splitBorder" 
							BorderThickness="1"
							BorderBrush="Transparent" 
							HorizontalAlignment="Right" 
							Margin="0" 
								  SnapsToDevicePixels="true" 
							  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<!--// This is defintely the combo box button glyph foreground color-->
							<Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
									Fill="{StaticResource ComboBox.Static.Glyph}" 
									HorizontalAlignment="Center" 
									Margin="0" 
									VerticalAlignment="Center"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<!--// Normal ToggleButton colors-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource Red6}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
						</MultiDataTrigger>
						<!--// Togglebutton Mouseover colors-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
						</MultiDataTrigger>
						<Trigger Property="IsPressed" Value="true">
							<!--// does nothing-->
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource Blue0}"/>
						</Trigger>
						<!--// Non editable button colors-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
						</MultiDataTrigger>
						<!--Editable button pressed (only when listbox is open)-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Orange6}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Orange6}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
						</MultiDataTrigger>
						<!--// Glyph-->
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource Black4}"/>
						</Trigger>
						<!--// Non Edtable-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
						</MultiDataTrigger>
						<!--// Non Edtable-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" 
			SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup" 
				 AllowsTransparency="true" 
				 Grid.ColumnSpan="2" 
				 IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
				 Placement="Bottom" 
				 PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<theme:SystemDropShadowChrome x:Name="shadow" 
						Color="Transparent" 
						MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
						MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="dropDownBorder" 
						  Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
						  BorderThickness="1" 
						  BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid" 
								RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas" 
									  HorizontalAlignment="Left" 
									  Height="0" 
									  VerticalAlignment="Top" 
									  Width="0">
									<Rectangle x:Name="opaqueRect" 
										Fill="{Binding Background, ElementName=dropDownBorder}" 
										Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
										Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" 
									KeyboardNavigation.DirectionalNavigation="Contained" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</theme:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton" 
						  Background="{TemplateBinding Background}" 
						  BorderThickness="{TemplateBinding BorderThickness}" 
						  BorderBrush="{TemplateBinding BorderBrush}" 
						  Grid.ColumnSpan="2" 
						  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
						  Style="{StaticResource ComboBoxToggleButton}"/>
			<!--// entire combo box border-->
			<Border x:Name="border" 
					  Background="{StaticResource Yellow3}" 
					  Margin="{TemplateBinding BorderThickness}">
				<TextBox x:Name="PART_EditableTextBox" 
						   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
						   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
						   Margin="{TemplateBinding Padding}" 
						   Style="{StaticResource ComboBoxEditableTextBox}" 
						   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Opacity" TargetName="border" Value="0.56"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter Property="Foreground" Value="Black"/>
			</Trigger>
			<!--// Control size and color of dropdown's shadow-->
			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="shadow" Value="0,0,35,35"/>
				<Setter Property="Color" TargetName="shadow" Value="#5061005B"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true"/>
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</MultiTrigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	
	
	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" 
				 Grid.ColumnSpan="2"
				 IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
				 Margin="1" 
				 Placement="Bottom" 
				 PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<theme:SystemDropShadowChrome x:Name="shadow" 
					Color="Transparent" 
					MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
					MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="dropDownBorder" 
						  Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
						  BorderThickness="1" 
						  BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid"
								RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas" 
									  HorizontalAlignment="Left" 
									  Height="0" 
									  VerticalAlignment="Top" 
									  Width="0">
									<Rectangle x:Name="opaqueRect" 
										     Fill="{Binding Background, ElementName=dropDownBorder}" 
										     Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
										     Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</theme:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton" 
					  Background="{TemplateBinding Background}" 
					  BorderThickness="{TemplateBinding BorderThickness}" 
					  BorderBrush="{TemplateBinding BorderBrush}" 
					  Grid.ColumnSpan="2" 
					  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
					  Style="{StaticResource ComboBoxToggleButton}"/>
			<ContentPresenter x:Name="contentPresenter" 
						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
						Content="{TemplateBinding SelectionBoxItem}" 
						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
						ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
						IsHitTestVisible="false" 
						Margin="{TemplateBinding Padding}" 
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
		</Grid>
		<ControlTemplate.Triggers>
			 <!--Little effect ??--> 
			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<!--<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>-->
				<Setter Property="Margin" TargetName="shadow" Value="0,0,45,45"/>
				<Setter Property="Color" TargetName="shadow" Value="#59040000"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true"/>
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</MultiTrigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
		<Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Padding" Value="6,3,5,3"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="2"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion Combo box Item template-->

</ResourceDictionary>