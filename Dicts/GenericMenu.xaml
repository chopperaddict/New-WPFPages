<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			  xmlns:local1="clr-namespace:WPFPages.Views">


	<!--//This menu template allows pretty good customisation simply by setting the 
	local:MenuAttachedProperties properties in the MAIN menu properties-->

	<ControlTemplate x:Key="MenuItemCtrlTemplate1" TargetType="{x:Type MenuItem}">

		<!--// Background of items when mouse is over them is set by -->
		<!--// The border brush + Thickness work on moused over menuitems-->
		<Border x:Name="templateRoot"
                    SnapsToDevicePixels="true"
                    
                    BorderBrush="{Binding Path=(local1:MenuAttachedProperties.MenuItemBorderColor) ,
                        RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"
                    
                    BorderThickness="{Binding Path=(local1:MenuAttachedProperties.MenuItemBorderThickness) ,
                        RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"
                    
                    Height = "{Binding Path=(local1:MenuAttachedProperties.MenuItemHeight) ,
                        RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"
                    
                    Margin = "{Binding Path=(local1:MenuAttachedProperties.MenuItemMargin) ,
                        RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" 			  
                >
			<!--// This doesnt do anything-->
			<!--Background="{Binding Path=(local1:MenuAttachedProperties.MenuItemSelectedBackground) ,
                        RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"-->
			
			<!--// This doesnt do anything-->
			<!--Background="{StaticResource Magenta0}">-->

			<Grid Margin="-1" >
				<Grid.ColumnDefinitions>

					<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="13"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="30"/>
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
                            ContentSource="Icon"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Width="16"
                            Height="16"
                            Margin="3"/>
				<Border x:Name="GlyphPanel"
                            Visibility="Hidden"
                            Height="22"
                            Width="22"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            ClipToBounds="False"
                            Margin="-1,0,0,0">
					<!--// does nothing at all-->
					<!--Background="{StaticResource Magenta0}"-->

					<!--BorderBrush="{Binding (local:MenuAttachedProperties.MenuItemBorderColor) ,
							  RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"
						    BorderThickness="{Binding (local:MenuAttachedProperties.MenuItemBorderThickness) ,
							  RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"-->
					<!--BorderBrush="{StaticResource MenuItem.Selected.Border}"-->

					<Path x:Name="Glyph"
                                Data="{StaticResource Checkmark}"
                                FlowDirection="LeftToRight"
                                Height="11"
                                Width="10"
                                Fill="{StaticResource Menu.Static.Foreground}" />
				</Border>
				<ContentPresenter x:Name="menuHeaderContainer"
                            Grid.Column="2"					    
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True"						    
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock x:Name="menuGestureText"
                            Grid.Column="4"
                            Text="{TemplateBinding InputGestureText}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Center"
                            Opacity="0.7" />
			</Grid>

		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>

			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>

			<!--// Mouse Over the menu item (NB Property = IsHighlighted== FALSE so Mouseover is FALSE-->

			<!--// Properties for all menu items NOT being moused over-->
			<Trigger Property="IsHighlighted" Value="false">

				<!--// Controls Font Foreground when Mouse is NOT OVER it-->
				<Setter TargetName="menuHeaderContainer" 				
					Property="TextElement.Foreground" 
					Value="{Binding Path=(local1:MenuAttachedProperties.MenuItemForeground), RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>

				<Setter TargetName="menuHeaderContainer" 
					Property="TextElement.FontWeight" 
					Value="{Binding Path=(local1:MenuAttachedProperties.MenuFontWeight) ,
					RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>

				<Setter TargetName="menuHeaderContainer" 
					Property="TextElement.FontSize" 
					Value="{Binding Path=(local1:MenuAttachedProperties.MenuFontSize) ,
					RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>

				<!--// This Colors the MenuItem's Normal Background - NOT Mouse over-->
				<Setter TargetName="templateRoot" 
					Property="Background" 
					Value="Transparent"/>
					<!--Value="{Binding Path=(local1:MenuAttachedProperties.MenuItemBackground) ,
					RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>-->

				<!--// This does NOT seem to control any Colors -->
				<Setter TargetName="GlyphPanel" 
					Property="BorderBrush" 
					Value="Magenta"/>
			</Trigger>

			<!--//  menu item (NB Property = IsHighlighted) == FALSE so Mouseover is FALSE-->

			<Trigger Property="IsHighlighted" Value="False">
				<Setter TargetName="templateRoot" 
                            Property="Background" 
                            Value="Orange"/>
				<!--Value="{Binding (local1:MenuAttachedProperties.MenuItemSelectedBackground) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>-->

				<!--<Setter TargetName="menuHeaderContainer"
                            Property="TextBlock.Foreground" 
                            Value="{Binding Path=(local1:MenuAttachedProperties.MenuItemSelectedForeground) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
				<Setter TargetName="menuHeaderContainer" 
                            Property="TextBlock.FontSize" 
                            Value="{Binding Path=(local1:MenuAttachedProperties.MenuFontSize) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
				--><!--<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource White0}" />--><!--
				<Setter TargetName="menuHeaderContainer" 
                            Property="TextBlock.FontWeight" 
                            Value="{Binding Path=(local1:MenuAttachedProperties.MenuFontWeight) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>-->
			</Trigger>
			<!--// This Colors the MenuIten's Background when Mouse is over it-->
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" 
                            Property="Background" 
                            Value="red"/>
				<!--Value="{Binding (local1:MenuAttachedProperties.MenuItemSelectedBackground) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>-->
				
				<!--<Setter TargetName="menuHeaderContainer"
                            Property="TextBlock.Foreground" 
                            Value="{Binding Path=(local1:MenuAttachedProperties.MenuItemSelectedForeground) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
				<Setter TargetName="menuHeaderContainer" 
                            Property="TextBlock.FontSize" 
                            Value="{Binding Path=(local1:MenuAttachedProperties.MenuFontSize) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
				--><!--<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource White0}" />--><!--
				<Setter TargetName="menuHeaderContainer" 
                            Property="TextBlock.FontWeight" 
                            Value="{Binding Path=(local1:MenuAttachedProperties.MenuFontWeight) ,
                            RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>-->
			</Trigger>

			<!--Menu item is Disabled-->
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="menuHeaderContainer" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True"/>
					<Condition Property="IsEnabled" Value="False"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

</ResourceDictionary>